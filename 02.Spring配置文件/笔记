3.1 bean标签基本配置
    用于配置对象交由Spring来创建
    默认情况下它调用的是类中的无参构造函数，如果没有无参构造则不能创建成功

    基本属性：
        id：Bean是实例在Spring容器中的唯一标识。
        class：Bean的全限定名。
3.2 Bean标签范围配置
    scope：指对象的作用范围。
        singleton：默认的，单例。
        prototype：多例的。
        request：web项目中，Spring创建一个Bean对象，将对象存入到request域中。
        session：web项目中，Spring创建一个Bean对象，将对象存入到session域中。
        global session：web项目中，应用在potlet环境，如果没有portlet环境那么global session相当于session。

        1.当scope取值是singleton时
            Bean实例化个数：1个
            Bean实例化时机：当Spring核心文件被加载时，实例化配置的Bean对象。
            Bean的生命周期：
                对象创建：当应用加载，创建对象时，对象就被创建了。
                对象运行：只要容器在，对象就一直活着。
                对象销毁：当应用卸载，销毁容器时，对象就被销毁了。

        2.当scope取值时prototype时
            Bean实例化个数：多个
            Bean实例化时机：当调用getBean()方法时实例化Bean
                对象创建：当使用对象时，创建新的对象实例。
                对象运行：只要对象在使用中，就一直活着。
                对象销毁：当对象长时间不用时，被Java的垃圾回收器回收了。
3.3 Bean生命周期配置
    init-method:指定类中的初始化方法名称。
    destroy-method:指定类中销毁方法名称。
3.4 Bean实例化三种方式
    无参构造方法实例化
    工厂静态方法实例化
    工厂实例方法实例化
3.6 Bean的依赖注入分析
    因为UserService和UserDao都在Spring容器中，而最终直接使用的是UserService，所以可以在Spring容器中将UserDao设置到UserService内部。
3.7 依赖注入的概念
    依赖注入：他是Spring框架核心IOC的具体实现
    在编写程序时，通过控制反转，把对象的创建交给Spring，但代码中不可能不出现依赖的情况。
    IOC解耦只是降低他们的依赖关系，但不会清除。例如：业务层仍会调用持久层的方法。
    那这种业务层和持久层的依赖关系，在使用Spring之后，就让Spring来维护了。
    简单的说，就是坐等把框架把持久层对象传入业务层，而不用我们去获取。



    Bean的依赖注入的方式
        怎么将UserDao注入到UserService内部？

        构造方法

        set方法
            P命名空间注入的本质也时set方法注入，但要比set方法注入要方便，主要体现在配置文件中。
3.8 Bean的依赖注入的数据类型
    上面的操作，都是注入的引用Bean，除了对象的引用可以注入，普通的数据类型，集合等都可以在容器中进行注入。

    注入数据的三种数据类型
        1.普通数据类型
        2.引用数据类型
            就是上面学到的UserService调用UserDao
        3.集合数据类型

3.9 Spring的重点配置
    <Bean>标签
        id属性:在容器Bean实例的唯一标识，不允许重复
        class属性：要实例化的bean的全限定名
        scope属性：Bean的作用范围，常用singleton（默认）和prototype
        <property>标签：属性注入
            name属性：属性名称
            value属性：注入的普通属性值
            ref属性：注入的对象引用值
            <list>标签
            <map>标签
            <properties>标签
            <constructor-arg>标签
            <import>标签：导入其他的spring的分文件